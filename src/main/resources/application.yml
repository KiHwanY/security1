server:
  port: 8090
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/security?serverTimezone=Asia/Seoul
    username: cos
    password: cos1234

  mvc:
    view:
      prefix: /templates/
      suffix: .mustache

  jpa:
    hibernate:
      ddl-auto: update #create update none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true



  security:
    oauth2:
      client:
        registration:
          google:
              client-id: 112064972400-pod06u893e417hl8pg7oh7oi2oavlqt3.apps.googleusercontent.com
              client-secret: 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
              scope:
                - email
                - profile
# 네이버는 기본적으로 provider 가 아니다. 그래서 추가적인 설정 파일이 있다. 아래코드 참고.
          naver:
              client-id: gdXWuOwUhNlkssozja_v
              client-secret: v9PvnnnwWC
              scope:
              - name
              - email
              client-name: Naver
              authorization-grant-type: authorization_code
              redirect-uri: http://localhost:8090/login/oauth2/code/naver



          facebook:
            client-id: 108800362236165
            client-secret: 2ba4367417b78646197e430da3d7b12f
            scope:
              - name
              - public_profile




        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
#회원정보를 json으로 받는데 response라는 키 값으로 네이버가 리턴해줌

